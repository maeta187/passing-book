.users-new-wrapper
  .container
    .row
      .col-offset-12.col-md-12.users-new-container
        h1.text-center.text-white
          | Save URL
    = form_for @bookmark do |f|
      .container
        .row
          .col-md-8.ml-auto
            div class="form-group"
              = f.text_area :title, class: 'title-form form', placeholder: "TITLE"
              = f.text_area :description, class: 'description-form form', placeholder: "DESCRIPTION"
              / = f.text_area :url, class: 'form-control'
                  / = f.fields_for :urls do |u|
              = f.nested_fields_for :urls do |uu|
                / URLの入力項目を動的に追加・削除
                = uu.remove_nested_fields_link 'DELETE', class: 'btn btn-danger', role: 'button'
                = uu.text_field :url, class: 'title-form form', placeholder: "URL"
              = f.add_nested_fields_link :urls, 'ADD', class: 'btn btn-primary', role: 'button'
            - if logged_in?
              = f.submit 'Save', class: 'btn-white form-btn'
/               a　href='var url = "http://localhost:3000/bookmarks/save";
/ console.log(url);
/ var data = location.href; // 送信データ ('param=value&...')
/ console.log(data);
/ var request = new XMLHttpRequest();
/ console.log(request);
/ request.open('POST', url?userid=' f.user_id ');
/ request.onreadystatechange = function () {
/   if (request.readyState != 4) {
/     // リクエスト中
/   } else if (request.status != 200) {
/     // 失敗
/   } else {
/     // 送信成功
/     var result = request.responseText;
/     console.log(result);
/   }
/ };
/ request.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
/ request.send(data);
/ '
